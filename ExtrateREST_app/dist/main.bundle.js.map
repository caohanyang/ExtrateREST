{"version":3,"sources":["/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/$_lazy_route_resource lazy","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.module.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/models/config.model.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/router/router-routing.module.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/services/config.service.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.html","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.scss","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/assets/img/mainUrl.png","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/environments/environment.ts","/Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<app-nav></app-nav>\\n<br>\\n<br>\\n<br>\\n\\n<router-outlet></router-outlet>\\n\\n<app-footer></app-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  padding-top: 5rem; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {ConfigService} from './services/config.service';\n\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport {RouterRoutingModule} from './router/router-routing.module'\n\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\nimport {HttpModule} from '@angular/http';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { CardComponent } from './card/card.component';\nimport { StepComponent } from './step/step.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { EditorComponent } from './editor/editor.component';\n\n// import { Ng4JsonEditorModule } from './component/ng4-jsoneditor/ng4-jsoneditor.module';\nimport { HomeComponent } from './home/home.component';\n\nimport { NgJsonEditorModule } from 'ang-jsoneditor' \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    StepComponent,\n    NavComponent,\n    FooterComponent,\n    EditorComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    [BrowserAnimationsModule],\n    [\n      CdkTableModule,\n      MatAutocompleteModule,\n      MatButtonModule,\n      MatButtonToggleModule,\n      MatCardModule,\n      MatCheckboxModule,\n      MatChipsModule,\n      MatStepperModule,\n      MatDatepickerModule,\n      MatDialogModule,\n      MatExpansionModule,\n      MatGridListModule,\n      MatIconModule,\n      MatInputModule,\n      MatListModule,\n      MatMenuModule,\n      MatNativeDateModule,\n      MatPaginatorModule,\n      MatProgressBarModule,\n      MatProgressSpinnerModule,\n      MatRadioModule,\n      MatRippleModule,\n      MatSelectModule,\n      MatSidenavModule,\n      MatSliderModule,\n      MatSlideToggleModule,\n      MatSnackBarModule,\n      MatSortModule,\n      MatTableModule,\n      MatTabsModule,\n      MatToolbarModule,\n      MatTooltipModule\n    ],\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    ModalModule.forRoot(),\n    RouterRoutingModule,\n    NgJsonEditorModule\n  ],\n  providers: [\n    ConfigService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/app.module.ts","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>General Information</mat-card-title>\\n      <mat-card-subtitle>This is the global information about the API</mat-card-subtitle>\\n    </mat-card-header>\\n   \\n    <img mat-card-image src=\\\"../assets/img/shiba2.jpg\\\" alt=\\\"documentation details\\\">\\n    <mat-card-content>\\n        <p>\\n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n          bred for hunting.\\n        </p>\\n    </mat-card-content>\\n\\n  </mat-card>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.html\n// module id = ../../../../../src/app/card/card.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n  width: 600px;\\n  margin: auto; }\\n\\n.example-header-image {\\n  background-image: url(\\\"/assets/img/shiba1.jpg\\\");\\n  background-size: cover; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.scss\n// module id = ../../../../../src/app/card/card.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/card/card.component.ts","module.exports = \"<!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"updateEditor()\\\">Update</button>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"download()\\\">Download</button> -->\\n\\n\\n<div style=\\\"height:600px;\\\" *ngIf=\\\"openapi!==''\\\"> \\n  <json-editor [options]=\\\"editorOptions\\\" [data]=\\\"openapi\\\" ></json-editor>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.html\n// module id = ../../../../../src/app/editor/editor.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.scss\n// module id = ../../../../../src/app/editor/editor.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConfigService } from '../services/config.service';\n// import { JsonEditorComponent, JsonEditorOptions } from '../component/jsoneditor/jsoneditor.component';\n// import { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor/jsoneditor/jsoneditor.component';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent implements OnInit {\n\n  openapi = \"\";\n  prop = false;\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n  @ViewChild(JsonEditorComponent) editor: JsonEditorComponent;\n\n  constructor(\n    private configService: ConfigService,\n  ) {\n    this.editorOptions = new JsonEditorOptions();\n\n  }\n\n  ngOnInit() {\n    this.editorOptions.modes = ['code', 'text', 'tree', 'view']; // set all allowed modes\n\n    this.configService.getOpenapi()\n      .subscribe((res) => {\n        console.log(\"-------interval 10s to get openapis------\");\n        // console.log(res);\n        this.openapi = res.data;\n      })\n  }\n\n\n  download(): void {\n    console.log(this.openapi);\n    this.openapi = JSON.stringify(this.editor.get(), null, 2);\n    console.log(this.openapi);\n\n  }\n\n\n  updateEditor(): void {\n\n    this.configService.getNewValue()\n      .subscribe((res) => {\n        console.log(\"-------res.data------\");\n        console.log(res);\n        this.openapi = res.data;\n        console.log(\"Success to get\");\n      })\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/editor/editor.component.ts","module.exports = \"<nav class=\\\"navbar sticky-bottom navbar-expand navbar-light bg-light\\\">\\n  <div class=\\\"navbar-text m-auto\\\">\\n    Made with <i class=\\\"fa fa-heart\\\" aria-hidden=\\\"true\\\" style=\\\"color: red;\\\"></i> by Hanyang\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.html\n// module id = ../../../../../src/app/footer/footer.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.scss\n// module id = ../../../../../src/app/footer/footer.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/footer/footer.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"starter-template\\\">\\n    <h1>ExtrateREST</h1>\\n    <p class=\\\"lead\\\">To generate OpenAPI specification for a REST service.</p>\\n    \\n\\n    <img src=\\\"../assets/img/overview.png\\\" alt=\\\"documentation details\\\" align=\\\"center\\\" width=75%>\\n<br>\\n<button mat-fab color=\\\"primary\\\" style=\\\"height:100px;width:100px;font-size:18px;\\\" onclick=\\\"window.location.href='/setup'\\\">Start</button>\\n    \\n  </div>\\n \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".starter-template {\\n  padding: 3rem 1.5rem 0rem 1.5rem;\\n  text-align: center;\\n  -ms-flex-item-align: center;\\n      -ms-grid-row-align: center;\\n      align-self: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.scss\n// module id = ../../../../../src/app/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/home/home.component.ts","class Config {\n    _id: string;\n    apiName: string;\n    docUrl: string;\n    filterUrl: string;\n    searchBase: boolean;\n    urlBase: string;\n    stuffing: string;\n    urlMiddle: string;\n    urlAfter: string;\n    urlTemplate: string;\n    reverse: string;\n    existVerb: string;\n    urlKey: string;\n    verbKey: string;\n    mode: string;\n    abbrevDelete: string;\n    reqKey: string;\n    reqMiddle: string;\n    reqExample: string;\n    url1req2: boolean;\n    reqTemplate: string;\n    resKey: string;\n    resMiddle: string;\n    url1res2: boolean;\n    resTemplate: string;\n    resExample: string;\n    existPara: boolean;\n    paraKey: string;\n    url1para2: boolean;\n    paraMiddle: string;\n    paraIn: string;\n    template: string;\n    number: string;\n\n    constructor(\n    ){\n        this.apiName = \"Instagram\"\n        this.docUrl = \"https://www.instagram.com/developer\"\n        this.filterUrl = \"https://www.instagram.com/developer/endpoints\"\n        this.searchBase = false\n        this.urlBase = \"\"\n        this.stuffing= \"\\\\s\"\n        this.urlMiddle= \" \"\n        this.urlAfter= \"\\n\"\n        this.urlTemplate= \"no\"\n        this.reverse= \"no\"\n        this.existVerb= \"yes\"\n        this.urlKey= \"\"\n        this.verbKey= \"\"\n        this.mode=\"https://\"\n        this.abbrevDelete= \"delete\"\n        this.reqKey= \"no\"\n        this.reqMiddle = \".{0,10}\"\n        this.reqExample= \"((\\\\{)|(\\\\[)){1}(.*?)((\\\\})|(\\\\])){1}\"\n        this.reqTemplate= \"pre\"\n        this.resKey= \"response\"\n        this.resMiddle= \"\\\\s.{0,120}\"\n        this.url1res2 = true\n        this.resTemplate= \"pre\"\n        this.resExample= \"((\\\\{)|(\\\\[)){1}(.*?)((\\\\})|(\\\\])){1}\"\n        this.existPara= true\n        this.paraKey= \"(parameter)|(argument)|(field)|(parameters)|(arguments)|(fields)\"\n        this.url1para2= true\n        this.paraMiddle= \"13\"\n        this.paraIn= \"query\"\n        this.template= \"table\"\n        this.number= \"multiple\"\n    }\n}\n\nexport default Config;\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/models/config.model.ts","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-primary fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">ExtrateREST</a>\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/setup\\\">Set up </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/openapi\\\">OpenAPI </a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"https://twitter.com/caohanyang007\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"https://github.com/caohanyang/ExtrateREST\\\"><i class=\\\"fa fa-github\\\" aria-hidden=\\\"true\\\"></i></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.html\n// module id = ../../../../../src/app/nav/nav.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.scss\n// module id = ../../../../../src/app/nav/nav.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/nav/nav.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EditorComponent} from '../editor/editor.component'\nimport {StepComponent } from '../step/step.component';\nimport {HomeComponent } from '../home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'setup',\n    component: StepComponent,\n  },\n  {\n    path: 'openapi',\n    component: EditorComponent,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class RouterRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/router/router-routing.module.ts","import Config from '../models/config.model';\nimport { Observable } from 'rxjs/Rx';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable'; // <--- This changes from the first Example!\n\n\n// RxJS operator for mapping the observable\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ConfigService {\n\n    api_url = 'http://localhost:3000';\n    configUrl = `${this.api_url}/api/configs`;\n    openapiUrl = `${this.api_url}/api/configs`;\n    REFRESH_TEMPO = 10000;\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    //Create config, takes a Config Object\n    createConfig(config: Config): Observable<any> {\n\n        console.log(config);\n        return this.http.post(`${this.configUrl}`, config);\n    }\n\n    getNewValue(): Observable<any> {\n        console.log(\"sending request for openapi\");\n        return this.http.get(`${this.openapiUrl}`);\n    }\n\n    getOpenapi(): Observable<any> {\n\n        return Observable.interval(this.REFRESH_TEMPO)\n            .switchMap(() => this.http.get(`${this.openapiUrl}`));\n    }\n\n\n    //Default Error handling method.\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/services/config.service.ts","module.exports = \"<!-- <button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button> -->\\n\\n<mat-horizontal-stepper [linear]=\\\"isLinear\\\">\\n  \\n    <!-- First form -->\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n      <form [formGroup]=\\\"firstFormGroup\\\">\\n        <ng-template matStepLabel>General Information</ng-template>\\n  \\n  \\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>General Information</mat-card-title>\\n            <mat-card-subtitle>This is the global information about the API</mat-card-subtitle>\\n          </mat-card-header>\\n  \\n          <!-- <h5 align=\\\"left\\\">\\n            <strong>Input the name of the target API</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\">\\n            <mat-form-field>\\n              <mat-label>API Name</mat-label>\\n              <input matInput placeholder=\\\"Instragram, Twitter, ...\\\" formControlName=\\\"apiName\\\" required>\\n            </mat-form-field>\\n          </div>\\n          <br> -->\\n  \\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>Find the Root URL of the API documentation</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\">\\n            <mat-form-field>\\n              <mat-label>Documentation Main Entry</mat-label>\\n              <input matInput placeholder=\\\"https://www.instagram.com/developer/\\\" formControlName=\\\"docUrl\\\" required>\\n            </mat-form-field>\\n            <p align=\\\"left\\\">\\n              A REST API HTML Documentation is composed of a set of web pages. Among the set of pages, one page is called the Root Page,\\n              and is linked directly or indirectly to all the pages of the set.\\n              <br> As an example, the Root Page of the Instagram API HTML Documentation is <i>https://www.instagram.com/developer/</i>.\\n            </p>\\n          </div>\\n          <img src=\\\"../assets/img/mainUrl.png\\\" alt=\\\"documentation details\\\" align=\\\"center\\\" width=100%>\\n          <br>\\n          <br>\\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>Find the Filter URL of the API documentation (optional)</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\">\\n            <mat-form-field>\\n              <mat-label>Documentation Filter Url</mat-label>\\n              <input matInput placeholder=\\\"https://www.instagram.com/developer/endpoints\\\" formControlName=\\\"filterUrl\\\">\\n            </mat-form-field>\\n            <p align=\\\"left\\\">\\n              This is an optional parameter.\\n              <br> If the developer can conclude the common URL for pages that describe the endpoints.\\n              <br> As an example, if the Instagram endpoints Urls are:\\n              <br>\\n              <i>https://www.instagram.com/developer/endpoints/users/</i>\\n              <br>\\n              <i>https://www.instagram.com/developer/endpoints/comments/</i>\\n              <br>\\n              <i>https://www.instagram.com/developer/endpoints/likes/</i>\\n              <br> The Filter Url could be <i>https://www.instagram.com/developer/endpoints</i>.\\n            </p>\\n          </div>\\n          <br>\\n  \\n        </mat-card>\\n  \\n        <div style=\\\"text-align:center\\\">\\n          <button mat-button matStepperNext>Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n  \\n    <!--Second form -->\\n    <ng-template #httpsMode><img src=\\\"../assets/img/https.png\\\" alt=\\\"https mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #httpMode><img src=\\\"../assets/img/http.png\\\" alt=\\\"http mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #relativeMode><img src=\\\"../assets/img/relative.png\\\" alt=\\\"relative mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #noverbkeyMode><img src=\\\"../assets/img/noverbkey.png\\\" alt=\\\"noverbkey mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #nullMode><img src=\\\"../assets/img/noverbnull.png\\\" alt=\\\"null mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #multiplywords><img src=\\\"../assets/img/multiplywords.png\\\" alt=\\\"multiply words\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #urlMiddle><img src=\\\"../assets/img/urlmiddle.png\\\" alt=\\\"url middle\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #pathTemplate><img src=\\\"../assets/img/pathtemplate.png\\\" alt=\\\"paht template\\\" align=\\\"center\\\"></ng-template>\\n  \\n  \\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n      <form [formGroup]=\\\"secondFormGroup\\\">\\n        <ng-template matStepLabel>URL & Verb</ng-template>\\n  \\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Url & Verb</mat-card-title>\\n            <mat-card-subtitle>This is the Url and Verb information about API endpoints</mat-card-subtitle>\\n          </mat-card-header>\\n  \\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>Choose the endpoint Url and Http Verb pattern</strong>\\n          </h5>\\n          <p align=\\\"left\\\">\\n            Take 2 minutes to look at the endpoint pages which describe the Url and Http Verb information.\\n            <br>\\n            <br> Choose the one of following patterns that match the target documentation:\\n            <br>\\n          </p>\\n  \\n          <mat-radio-group formControlName=\\\"mode\\\" [(ngModel)]=\\\"modeType\\\">\\n  \\n            <div class=\\\"example-margin\\\" align=\\\"left\\\">\\n              <mat-radio-button class=\\\"example-radio\\\" value=\\\"https://\\\" [ngbTooltip]=\\\"httpsMode\\\">Both URL and Verb exist, Url begins with https</mat-radio-button>\\n            </div>\\n            <br>\\n  \\n            <div class=\\\"example-margin\\\">\\n              <mat-radio-button class=\\\"example-radio\\\" value=\\\"http://\\\" [ngbTooltip]=\\\"httpMode\\\">Both URL and Verb exist, Url begins with http</mat-radio-button>\\n            </div>\\n            <br>\\n  \\n            <div class=\\\"example-margin\\\">\\n              <mat-radio-button class=\\\"example-radio\\\" value=\\\"/\\\" [ngbTooltip]=\\\"relativeMode\\\">Both URL and Verb exist, Url begins with /</mat-radio-button>\\n            </div>\\n            <br>\\n  \\n            <div class=\\\"example-margin\\\">\\n              <mat-radio-button class=\\\"example-radio\\\" value=\\\"key\\\" [ngbTooltip]=\\\"noverbkeyMode\\\">Verb doesn't exist, common keyword exists before Url</mat-radio-button>\\n            </div>\\n            <br>\\n  \\n            <div class=\\\"example-margin\\\">\\n              <mat-radio-button class=\\\"example-radio\\\" value=\\\"null\\\" [ngbTooltip]=\\\"nullMode\\\">Verb doesn't exist, can't find common keyword before Url</mat-radio-button>\\n            </div>\\n            <br>\\n  \\n          </mat-radio-group>\\n          <br>\\n  \\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>URL details</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\" *ngIf=\\\"!(modeType=='key' || modeType=='null')\\\">\\n            <strong>Check order of appearance: \\n            <i align=\\\"left\\\" [ngbTooltip]=\\\"httpsMode\\\">Verb first</i> or \\n            <i align=\\\"left\\\" [ngbTooltip]=\\\"httpMode\\\">Url first</i>\\n          </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"order of url and verb\\\" [(value)]=\\\"reverse\\\" formControlName=\\\"reverse\\\" required>\\n                <mat-option value=\\\"yes\\\">Verb first</mat-option>\\n                <mat-option value=\\\"no\\\">Url first</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>Check stuffing between Verb and Url: \\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"relativeMode\\\">Whitespace</i> or \\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"multiplywords\\\">Multiply words</i>\\n            </strong>\\n            <mat-form-field hintLabel=\\\"The stuffing can be whitespace or multiply words\\\">\\n              <mat-select placeholder=\\\"stuffing\\\" formControlName=\\\"stuffing\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s\\\">Whitespace</mat-option>\\n                <mat-option value=\\\".{0,10}\\\">1 or 2 words</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s.{0,60}\\\">3 or 10 words</mat-option>\\n                <mat-option value=\\\"(.*?)\\\">more than 10 words</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n  \\n          <br>\\n          <div class=\\\"example-container\\\" *ngIf=\\\"modeType=='key'\\\">\\n            <strong>The common keyword before Url:</strong>\\n            <p align=\\\"left\\\">\\n              Look at each endpoint, and summarize the common keyword before url.\\n              <br> As an example, if the endpoints Urls are presented:\\n              <br>\\n              <i>Url : api.geonames.org/postalCodeLookupJSON?</i>\\n              <br>\\n              <i>Url : api.geonames.org/postalCodeLookupJSON?</i>\\n              <br>\\n              <i>Url : api.geonames.org/findNearbyPlaceName?</i>\\n              <br> The common keyword could be: <i>Url :</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-label>Keyword before Url</mat-label>\\n              <input matInput placeholder=\\\"Url :\\\" formControlName=\\\"urlKey\\\">\\n            </mat-form-field>\\n          </div>\\n  \\n          <br>\\n          <div class=\\\"example-container\\\">\\n            <strong>Check if the Url wrapped in different tags: \\n            <i align=\\\"left\\\" [ngbTooltip]=\\\"httpsMode\\\">No</i> or\\n            <i align=\\\"left\\\" [ngbTooltip]=\\\"urlMiddle\\\">Yes</i>\\n          </strong> Normally, if the Url itself (ignores query parameters) wrapped in different tags, it shows in\\n            different color or it may contian whitespace.\\n            <br> Inspect the HTML sources to check this property.\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"urlMiddle\\\" formControlName=\\\"urlMiddle\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"\\\\ \\\">Yes</mat-option>\\n                <mat-option value=\\\"\\\">No</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <!-- <strong> Character after the Url: {{urlAfter}} </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"urlAfter\\\" [(value)]=\\\"urlAfter\\\" formControlName=\\\"urlAfter\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"\\\\ \\\">Space Bar</mat-option>\\n                <mat-option value=\\\"\\\\n\\\">New Line</mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n  \\n            <strong>Check if the Url support Path templating: \\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"pathTemplate\\\">Example</i>\\n            </strong>\\n            <p> Path templating refers to the usage of curly braces (&#123;&#125;) to mark a section of a URL path as replaceable\\n              using path parameters</p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"urlTemplate\\\" formControlName=\\\"urlTemplate\\\" required>\\n                <mat-option value=\\\"no\\\">No</mat-option>\\n                <mat-option value=\\\":id\\\">:id</mat-option>\\n                <mat-option value=\\\"{id}\\\">&#123;id&#125;</mat-option>\\n                <mat-option value=\\\"<id>\\\">&lt;id&gt;</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n          </div>\\n          <br>\\n  \\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>Http Verb details</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\">\\n            <strong>The abbreviation for the Http Verb Delete: \\n              <i >Del</i> or <i >Delete</i> \\n            </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"abbreviation for delete\\\"  formControlName=\\\"abbrevDelete\\\" required>\\n                <mat-option value=\\\"del\\\">Del</mat-option>\\n                <mat-option value=\\\"delete\\\">Delete</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n  \\n  \\n        </mat-card>\\n  \\n        <div style=\\\"text-align:center\\\">\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext>Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n  \\n    <!-- Three form -->\\n    <ng-template #reqHttp><img src=\\\"../assets/img/reqhttp.png\\\" alt=\\\"reqHttp mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #reqCurl><img src=\\\"../assets/img/reqcurl.png\\\" alt=\\\"reqCurl mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #reqJson><img src=\\\"../assets/img/reqjson.png\\\" alt=\\\"reqJson mode\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #reqExample><img src=\\\"../assets/img/reqexample.png\\\" alt=\\\"reqJson mode\\\" align=\\\"center\\\"></ng-template>\\n  \\n    <mat-step [stepControl]=\\\"threeFormGroup\\\">\\n      <form [formGroup]=\\\"threeFormGroup\\\">\\n        <ng-template matStepLabel>Request & Response Example</ng-template>\\n  \\n  \\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Request & Response Example</mat-card-title>\\n            <mat-card-subtitle>This is the Request and Response information about API endpoints</mat-card-subtitle>\\n          </mat-card-header>\\n  \\n          <!-- request details-->\\n          <h5 align=\\\"left\\\">\\n            <strong>Request details</strong>\\n          </h5>\\n  \\n          <div class=\\\"example-container\\\">\\n            <strong>Check if the API contain request examples</strong>\\n            <p>Request example could be </p>\\n            <p>\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqHttp\\\">Standard Http request</i> or\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqCurl\\\">Curl request</i> or\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqJson\\\">POST body </i>\\n            </p>\\n  \\n            <mat-form-field>\\n              <mat-select placeholder=\\\"exist request example?\\\" [(value)]=\\\"request\\\" required>\\n                <mat-option value=\\\"yes\\\">Yes</mat-option>\\n                <mat-option value=\\\"no\\\">No</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n  \\n          <div class=\\\"example-container\\\" *ngIf=\\\"request=='yes'\\\">\\n  \\n            <strong>Type of request example</strong>\\n            <p>3 types of request example: </p>\\n            <p>\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqHttp\\\">Standard Http request</i> or\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqCurl\\\">Curl request</i> or\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqJson\\\">POST body </i>\\n            </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"the type of the request example\\\" formControlName=\\\"reqExample\\\" required>\\n                <mat-option value=\\\"http\\\">HTTP</mat-option>\\n                <mat-option value=\\\"curl\\\">CURL</mat-option>\\n                <mat-option value=\\\"((\\\\\\\\{)|(\\\\\\\\[)){1}(.*?)((\\\\\\\\})|(\\\\\\\\])){1}\\\">POST body</mat-option>\\n                <!-- <mat-option value=\\\"xml\\\">XML</mat-option> -->\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>Common Keyword before the request</strong>\\n            <p align=\\\"left\\\">\\n              Look at each endpoint, and summarize the common keyword before request example.\\n              <br> The common keyword could be:\\n              <i [ngbTooltip]=\\\"reqExample\\\">example request</i>, <i [ngbTooltip]=\\\"reqHttp\\\">sample request</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-label>keyword before request example</mat-label>\\n              <input matInput placeholder=\\\"example request, sample request\\\" formControlName=\\\"reqKey\\\" required>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>Filling between keyword and request example: \\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqExample\\\">Whitespace</i> or \\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"reqHttp\\\">Multiply words</i>\\n            </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"filling between keyword and example\\\" formControlName=\\\"reqMiddle\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s\\\">Whitespace</mat-option>\\n                <mat-option value=\\\".{0,10}\\\">1 or 2 words</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s.{0,60}\\\">3 or 10 words</mat-option>\\n                <mat-option value=\\\"(.*?)\\\">more than 10 words</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>HTML tags for the request example: </strong>\\n            <p>Inspect the HTML sources to check this property. </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"html tag for the request example\\\" formControlName=\\\"reqTemplate\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"pre\\\">pre</mat-option>\\n                <mat-option value=\\\"code\\\">code</mat-option>\\n                <mat-option value=\\\"a\\\">a</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <!-- <br>\\n            <strong>Check the location order of Url and request example: </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"order of url and request example\\\" formControlName=\\\"url1req2\\\" required>\\n                <mat-option value=\\\"yes\\\">Url first</mat-option>\\n                <mat-option value=\\\"no\\\">Request example first</mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n  \\n          </div>\\n          <br>\\n  \\n          <!-- response details-->\\n          <ng-template #resExample><img src=\\\"../assets/img/resexample.png\\\" alt=\\\"reqJson mode\\\" align=\\\"center\\\"></ng-template>\\n          <ng-template #resMultiply><img src=\\\"../assets/img/resmultiply.png\\\" alt=\\\"reqJson mode\\\" align=\\\"center\\\"></ng-template>\\n  \\n  \\n          <h5 align=\\\"left\\\">\\n            <strong>Response details</strong>\\n          </h5>\\n          <div class=\\\"example-container\\\">\\n            <strong>Check if the API contain response examples</strong>\\n            <p>Response example could be </p>\\n            <p>\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"resExample\\\">Twitter Response example</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"exist response example?\\\" [(value)]=\\\"response\\\" required>\\n                <mat-option value=\\\"yes\\\">Yes</mat-option>\\n                <mat-option value=\\\"no\\\">No</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n  \\n          <div class=\\\"example-container\\\" *ngIf=\\\"response=='yes'\\\">\\n            <br>\\n            <strong>Common Keyword before the response</strong>\\n            <p align=\\\"left\\\">\\n              Look at each endpoint, and summarize the common keyword before response example.\\n              <br> The common keyword could be:\\n              <i [ngbTooltip]=\\\"resExample\\\">Example Response</i>, <i [ngbTooltip]=\\\"resMultiply\\\">Response Body</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-label>keyword before response example</mat-label>\\n              <input matInput placeholder=\\\"example, response, JSON representation...\\\" formControlName=\\\"resKey\\\" required>\\n            </mat-form-field>\\n  \\n            <!-- <br>\\n            <strong>Type of response example</strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"the type of the response example\\\" formControlName=\\\"resExample\\\" required>\\n                <mat-option value=\\\"((\\\\\\\\{)|(\\\\\\\\[)){1}(.*?)((\\\\\\\\})|(\\\\\\\\])){1}\\\">JSON</mat-option> -->\\n            <!-- <mat-option value=\\\"xml\\\">XML</mat-option> -->\\n            <!-- </mat-select>\\n            </mat-form-field> -->\\n  \\n            <br>\\n            <strong> Filling between keyword and response example: \\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"resExample\\\">Whitespace</i> or \\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"resMultiply\\\">Multiply words</i>\\n            </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"stuffing between keyword and example\\\" formControlName=\\\"resMiddle\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s\\\">Whitespace</mat-option>\\n                <mat-option value=\\\".{0,10}\\\">1 or 2 words</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s.{0,60}\\\">3 or 10 words</mat-option>\\n                <mat-option value=\\\"\\\\\\\\s.{0,120}\\\">10 or 20 words</mat-option>\\n                <mat-option value=\\\"(.*?)\\\">more than 20 words</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>HTML tags for the response example: </strong>\\n            <p>Inspect the HTML sources to check this property. </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"html tag for the response example\\\" formControlName=\\\"resTemplate\\\" required>\\n                <mat-option>None</mat-option>\\n                <mat-option value=\\\"pre\\\">pre</mat-option>\\n                <mat-option value=\\\"code\\\">code</mat-option>\\n                <mat-option value=\\\"span\\\">span</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <!-- <p>Check the location order of Url and response example: </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"order of url and response example\\\" formControlName=\\\"url1res2\\\" required>\\n                <mat-option value=\\\"yes\\\">Url first</mat-option>\\n                <mat-option value=\\\"no\\\">Response example first</mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n  \\n          </div>\\n  \\n        </mat-card>\\n  \\n        <div style=\\\"text-align:center\\\">\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext>Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n  \\n  \\n    <!-- Four form -->\\n    <ng-template #table><img src=\\\"../assets/img/table.png\\\" alt=\\\"table\\\" align=\\\"center\\\"></ng-template>\\n    <ng-template #list><img src=\\\"../assets/img/list.png\\\" alt=\\\"list\\\" align=\\\"center\\\"></ng-template>\\n    \\n    <mat-step [stepControl]=\\\"fourFormGroup\\\">\\n      <form [formGroup]=\\\"fourFormGroup\\\">\\n        <ng-template matStepLabel>Parameter</ng-template>\\n  \\n  \\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Parameter</mat-card-title>\\n            <mat-card-subtitle>This is the Parameter information about API endpoints</mat-card-subtitle>\\n          </mat-card-header>\\n  \\n  \\n          <!-- Parameter details-->\\n          <h5 align=\\\"left\\\">\\n            <strong>Parameter details</strong>\\n          </h5>\\n  \\n          <div class=\\\"example-container\\\">\\n            <strong>Check if the API contain parameter details</strong>\\n            <p>parameter could be presented in a </p>\\n            <p>\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"table\\\">HTML Table</i> or\\n              <i align=\\\"left\\\" [ngbTooltip]=\\\"list\\\">HTML List</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"exist parameter information?\\\" [(value)]=\\\"existpara\\\" required>\\n                <mat-option value=\\\"yes\\\">Yes</mat-option>\\n                <mat-option value=\\\"no\\\">No</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n  \\n          <br>\\n          <div class=\\\"example-container\\\" *ngIf=\\\"existpara=='yes'\\\">\\n            <strong>Type of HTML template: </strong>\\n            <p>\\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"table\\\">HTML Table</i> or\\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"list\\\">HTML List</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"the type of the parameter template\\\" formControlName=\\\"template\\\" required>\\n                <mat-option value=\\\"table\\\">Table</mat-option>\\n                <mat-option value=\\\"list\\\">List</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n  \\n            <br>\\n            <strong>The key word before the parameter template</strong>\\n            <p align=\\\"left\\\">\\n                Look at each endpoint, and summarize the common keyword before parameter information.\\n                <br> The common keyword could be:\\n                <i [ngbTooltip]=\\\"table\\\">Parameters</i>, <i [ngbTooltip]=\\\"list\\\">Arguments</i>\\n            </p>\\n            <mat-form-field>\\n              <mat-label>keyword before parameter template</mat-label>\\n              <input matInput placeholder=\\\"parameter, argument, field, parameters...\\\" formControlName=\\\"paraKey\\\" required>\\n            </mat-form-field>\\n  \\n            <!-- <br>\\n            <strong> Stuffing between keyword and parameter template: \\n                <i align=\\\"left\\\" [ngbTooltip]=\\\"list\\\">Whitespace</i> or \\n                <i align=\\\"left\\\" >Multiply words</i>\\n            </strong>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"stuffing between keyword and parameter template\\\" formControlName=\\\"paraMiddle\\\" required>\\n                <mat-option value=\\\"whitespace\\\">Whitespace</mat-option>\\n                <mat-option value=\\\"10\\\">1 or 2 words</mat-option>\\n                <mat-option value=\\\"100\\\">3 or 10 words</mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n  \\n            <!-- <p>Check the location order of Url and parameter template: </p>\\n            <mat-form-field>\\n              <mat-select placeholder=\\\"order of url and parameter template\\\" formControlName=\\\"url1para2\\\" required>\\n                <mat-option value=\\\"yes\\\">Url first</mat-option>\\n                <mat-option value=\\\"no\\\">Parameter template first</mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n  \\n          </div>\\n  \\n  \\n        </mat-card>\\n  \\n  \\n        <div style=\\\"text-align:center\\\">\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext>Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n  \\n    <mat-step>\\n      <ng-template matStepLabel>Done</ng-template>\\n  \\n  \\n  \\n  \\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n          <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n          <mat-card-title>Generation</mat-card-title>\\n          <mat-card-subtitle>You are now done. Ready to have the OpenAPI? </mat-card-subtitle>\\n        </mat-card-header>\\n  \\n      </mat-card>\\n  \\n      <div style=\\\"text-align:center\\\">\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button type=\\\"submit\\\" mat-button (click)=\\\"openModal(template)\\\">Done</button>\\n        <!-- <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Done</button> -->\\n      </div>\\n  \\n      <!-- Modal -->\\n      <ng-template #template>\\n  \\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">OpenAPI Will Be Generated</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modalRef.hide()\\\" aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <p>The OpenAPI has been requested to be generated.</p>\\n            <p> Wait several minutes and then, look at your OpenAPI page.</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" onclick=\\\"window.location.href='/openapi'\\\">Go</button>\\n          </div>\\n        </div>\\n  \\n  \\n      </ng-template>\\n  \\n    </mat-step>\\n  </mat-horizontal-stepper>\\n  \\n  \\n  <!-- Copyright 2017 Google Inc. All Rights Reserved.\\n      Use of this source code is governed by an MIT-style license that\\n      can be found in the LICENSE file at http://angular.io/license -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.html\n// module id = ../../../../../src/app/step/step.component.html\n// module chunks = main","var escape = require(\"../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-radio {\\n  -ms-flex-item-align: left;\\n      -ms-grid-row-align: left;\\n      align-self: left;\\n  margin: 0; }\\n\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  margin: auto;\\n  width: 100%; }\\n\\n.example-container img {\\n  width: 597px; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n.example-card {\\n  width: 650px;\\n  margin: auto; }\\n\\n.example-header-image {\\n  background-image: url(\\\"/assets/img/shiba1.jpg\\\");\\n  background-size: cover; }\\n\\n.example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-line-pack: center;\\n      align-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px 0px; }\\n\\n.cc-selector input {\\n  margin: 0;\\n  padding: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  appearance: none; }\\n\\n.visa {\\n  background-image: url(\" + escape(require(\"../../assets/img/mainUrl.png\")) + \"); }\\n\\n.mastercard {\\n  background-image: url(\" + escape(require(\"../../assets/img/mainUrl.png\")) + \"); }\\n\\n.cc-selector input:active + .drinkcard-cc {\\n  opacity: .9; }\\n\\n.cc-selector input:checked + .drinkcard-cc {\\n  -webkit-filter: none;\\n  -moz-filter: none;\\n  filter: none; }\\n\\n.drinkcard-cc {\\n  cursor: pointer;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n  margin: auto;\\n  transition: all 100ms ease-in;\\n  -webkit-filter: brightness(1.8) grayscale(1) opacity(0.7);\\n  -moz-filter: brightness(1.8) grayscale(1) opacity(0.7);\\n  filter: brightness(1.8) grayscale(1) opacity(0.7); }\\n\\n.drinkcard-cc:hover {\\n  -webkit-filter: brightness(1.2) grayscale(0.5) opacity(0.9);\\n  -moz-filter: brightness(1.2) grayscale(0.5) opacity(0.9);\\n  filter: brightness(1.2) grayscale(0.5) opacity(0.9); }\\n\\n/* Extras */\\na:visited {\\n  color: #888; }\\n\\na {\\n  color: #444;\\n  text-decoration: none; }\\n\\np {\\n  margin-bottom: .3em; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.scss\n// module id = ../../../../../src/app/step/step.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ConfigService} from '../services/config.service';\nimport Config from '../models/config.model';\nimport { TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-step',\n  templateUrl: './step.component.html',\n  styleUrls: ['./step.component.scss']\n})\nexport class StepComponent implements OnInit {\n\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  threeFormGroup: FormGroup;\n  fourFormGroup: FormGroup;\n  // stuffing = 'Whitespace';\n  request = 'no';\n  response = 'no';\n  existpara = 'no';\n  modeType;\n  public modalRef: BsModalRef; // {1}\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private configService: ConfigService,\n    private modalService: BsModalService\n    ) { }\n\n  //Declaring the new confige object and initilizing it\n  public newConfig: Config = new Config();\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      apiName: ['', Validators.required],\n      docUrl: ['',  Validators.required],\n      filterUrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      mode: ['', Validators.required],\n      reverse: ['', Validators.required],\n      stuffing: ['', Validators.required],\n      urlMiddle: ['', Validators.required],\n      urlAfter: ['', Validators.required],\n      urlTemplate: ['', Validators.required],\n      urlKey: ['', Validators.required],\n      abbrevDelete: ['', Validators.required]\n    });\n    this.threeFormGroup = this._formBuilder.group({\n      reqKey: ['', Validators.required],\n      reqExample: ['', Validators.required],\n      reqMiddle: ['', Validators.required],\n      reqTemplate: ['', Validators.required],\n      url1req2: ['', Validators.required],\n\n      resKey: ['', Validators.required],\n      resExample: ['', Validators.required],\n      resMiddle: ['', Validators.required],\n      resTemplate: ['', Validators.required],\n      url1res2: ['', Validators.required]\n\n    });\n    this.fourFormGroup = this._formBuilder.group({\n      fourCtrl: ['', Validators.required],\n      test: ['', Validators.required],\n\n      paraKey: ['', Validators.required],\n      url1para2: ['', Validators.required],\n      paraMiddle: ['', Validators.required],\n      template: ['', Validators.required],\n\n    });\n  }\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template); \n\n    this.create();\n  }\n\n  create(): void {\n\n    this.receiveForm();\n\n    this.configService.createConfig(this.newConfig)\n     .subscribe((res) => {\n       console.log(\"-------new config------\");\n       console.log(this.newConfig);\n       console.log(\"-------res.data------\");\n       console.log(res);\n       console.log(\"Success to create new config\");\n     })\n  }\n  \n  receiveForm(): void {\n    // first form\n    // this.newConfig.apiName = this.firstFormGroup.value.apiName;\n    this.newConfig.docUrl = this.firstFormGroup.value.docUrl;\n    this.newConfig.filterUrl = this.firstFormGroup.value.filterUrl;\n\n    this.newConfig.searchBase = false\n    this.newConfig.urlBase = \"\"\n\n    // second form\n    this.newConfig.mode= this.secondFormGroup.value.mode;\n    this.newConfig.stuffing= this.secondFormGroup.value.stuffing;\n    this.newConfig.reverse= this.secondFormGroup.value.reverse;\n    this.newConfig.urlKey= this.secondFormGroup.value.urlKey;\n    this.newConfig.urlMiddle= this.secondFormGroup.value.urlMiddle;\n    this.newConfig.urlAfter= this.secondFormGroup.value.urlAfter;\n    this.newConfig.urlTemplate= this.secondFormGroup.value.urlTemplate;\n    this.newConfig.abbrevDelete= this.secondFormGroup.value.abbrevDelete;\n    \n\n    this.newConfig.existVerb= \"yes\"\n    this.newConfig.verbKey= \"\"\n    \n    // third form   request\n    if (this.request === \"yes\" ) {\n      this.newConfig.reqKey = this.threeFormGroup.value.reqKey;\n    } else {\n      this.newConfig.reqKey= \"no\"\n    }\n    this.newConfig.reqExample= this.threeFormGroup.value.reqExample;\n    this.newConfig.reqMiddle =  this.threeFormGroup.value.reqMiddle;\n    // this.newConfig.url1req2 = (this.threeFormGroup.value.url1req2===\"yes\")? true: false;\n    this.newConfig.reqTemplate= this.threeFormGroup.value.reqTemplate;\n\n    // third form   response\n    if (this.response === \"yes\" ) {\n      console.log(this.threeFormGroup.value.resKey)\n      this.newConfig.reqKey = this.threeFormGroup.value.resKey;\n      console.log(this.newConfig.reqKey)\n    } else {\n      this.newConfig.resKey= \"no\"\n    }\n    this.newConfig.resMiddle= this.threeFormGroup.value.resMiddle;\n    this.newConfig.url1res2 = (this.threeFormGroup.value.url1res2===\"yes\")? true: false;\n    this.newConfig.resTemplate= this.threeFormGroup.value.resTemplate;\n    // this.newConfig.resExample= this.threeFormGroup.value.resExample;\n\n    // four form  \n    this.newConfig.existPara= (this.existpara===\"yes\")? true: false;\n    this.newConfig.paraKey= this.fourFormGroup.value.paraKey;\n    this.newConfig.url1para2= true;\n    // this.newConfig.url1para2= (this.fourFormGroup.value.url1para2===\"yes\")? true: false;    \n    // this.newConfig.paraMiddle= this.fourFormGroup.value.paraMiddle;\n    this.newConfig.template= this.fourFormGroup.value.template;\n\n    // default\n    this.newConfig.apiName = \"fakeName\"\n    this.newConfig.paraIn= \"query\"\n    this.newConfig.number= \"multiple\"\n    this.newConfig.url1req2= true\n    this.newConfig.resExample = \"((\\\\{)|(\\\\[)){1}(.*?)((\\\\})|(\\\\])){1}\"\n    this.newConfig.paraMiddle= \"13\"\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/app/step/step.component.ts","module.exports = __webpack_public_path__ + \"mainUrl.63b12ec3a4a4bc4b179e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/assets/img/mainUrl.png\n// module id = ../../../../../src/assets/img/mainUrl.png\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/hanyangcao/Documents/paper/REST/ExtrateREST/ExtrateREST_front/src/main.ts"],"sourceRoot":"webpack:///"}