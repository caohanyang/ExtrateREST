{
  "basePath": "/calendar/v3",
  "paths": {
    "/calendars/calendarId/acl": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the calendar sharing change. Optional. The default is True.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string Token specifying which result page to return. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "showDeleted",
            "description": "boolean Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to \" none \". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "syncToken",
            "description": "string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken .\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/acl/ruleId": {
      "DELETE": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "ruleId",
            "description": "string ACL rule identifier.",
            "type": "string",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "ruleId",
            "description": "string ACL rule identifier.",
            "type": "string",
            "required": true
          }
        ]
      },
      "PATCH": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "ruleId",
            "description": "string ACL rule identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "ruleId",
            "description": "string ACL rule identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the calendar sharing change. Note that there are no notifications on access removal. Optional. The default is True.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    },
    "/channels/stopRequestbody": {
      "POST": {
        "request": "{ \"id\": string , \"resourceId\": string }"
      }
    },
    "/freeBusyRequestbody": {
      "POST": {
        "request": "{ \"timeMin\": datetime , \"timeMax\": datetime , \"timeZone\": string , \"groupExpansionMax\": integer , \"calendarExpansionMax\": integer , \"items\": [ { \"id\": string } ] }"
      }
    },
    "/calendars/calendarId": {
      "DELETE": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      },
      "PATCH": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/colorsRequestbody": {
      "GET": {}
    },
    "/calendarsAuthorization": {
      "POST": {}
    },
    "/calendars/calendarId/events/eventId/instances": {
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Recurring event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "alwaysIncludeEmail",
            "description": "boolean Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "integer Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "originalStart",
            "description": "string The original start time of the instance in the result. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string Token specifying which result page to return. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "showDeleted",
            "description": "boolean Whether to include deleted events (with status equals \" cancelled \") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "timeMax",
            "description": "datetime Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeMin",
            "description": "datetime Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeZone",
            "description": "string Time zone used in the response. Optional. The default is the time zone of the calendar.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/me/settings": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "maxResults",
            "description": "integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string Token specifying which result page to return. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "syncToken",
            "description": "string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken .\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/me/calendarList/watch": {
      "POST": {
        "request": "{ \"id\": string , \"token\": string , \"type\": string , \"address\": string , \"params\": { \"ttl\": string } }"
      }
    },
    "/calendars/calendarId/events/eventId/move": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier of the source calendar where the event currently is on.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "destination",
            "description": "string Calendar identifier of the target calendar where the event is to be moved to.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the change of the event's organizer. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/acl/watch": {
      "POST": {
        "request": "{ \"id\": string , \"token\": string , \"type\": string , \"address\": string , \"params\": { \"ttl\": string } }",
        "parameters": [
          {
            "in": "body",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/events": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "conferenceDataVersion",
            "description": "integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1 , inclusive.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the creation of the new event. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "supportsAttachments",
            "description": "boolean Whether API client performing operation supports event attachments. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "alwaysIncludeEmail",
            "description": "boolean Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "iCalUID",
            "description": "string Specifies event ID in the iCalendar format to be included in the response. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "integer Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "string The order of the events returned in the result. Optional. The default is an unspecified, stable order.\n\nAcceptable values are: \" startTime \": Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)\n\" updated \": Order by last modification time (ascending).\n",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string Token specifying which result page to return. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "privateExtendedProperty",
            "description": "string Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "q",
            "description": "string Free text search terms to find events that match these terms in any field, except for extended properties. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sharedExtendedProperty",
            "description": "string Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "showDeleted",
            "description": "boolean Whether to include deleted events (with status equals \" cancelled \") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "showHiddenInvitations",
            "description": "boolean Whether to include hidden invitations in the result. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "singleEvents",
            "description": "boolean Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "syncToken",
            "description": "string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.\n\nThese are: iCalUID\norderBy\nprivateExtendedProperty\nq\nsharedExtendedProperty\ntimeMin\ntimeMax\nupdatedMin\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken .\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "timeMax",
            "description": "datetime Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMin is set, timeMax must be greater than timeMin .",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeMin",
            "description": "datetime Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored. If timeMax is set, timeMin must be smaller than timeMax .",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeZone",
            "description": "string Time zone used in the response. Optional. The default is the time zone of the calendar.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "updatedMin",
            "description": "datetime Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted . Optional. The default is not to filter by last modification time.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/events/import": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "conferenceDataVersion",
            "description": "integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1 , inclusive.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "supportsAttachments",
            "description": "boolean Whether API client performing operation supports event attachments. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/clear": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/events/eventId": {
      "DELETE": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the deletion of the event. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "alwaysIncludeEmail",
            "description": "boolean Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeZone",
            "description": "string Time zone used in the response. Optional. The default is the time zone of the calendar.",
            "type": "string",
            "required": true
          }
        ]
      },
      "PATCH": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "alwaysIncludeEmail",
            "description": "boolean Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "conferenceDataVersion",
            "description": "integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1 , inclusive.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "supportsAttachments",
            "description": "boolean Whether API client performing operation supports event attachments. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "eventId",
            "description": "string Event identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "alwaysIncludeEmail",
            "description": "boolean Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "conferenceDataVersion",
            "description": "integer Version number of conference data supported by the API client. Version 0 assumes no conference data support and ignores conference data in the event's body. Version 1 enables support for copying of ConferenceData as well as for creating new conferences using the createRequest field of conferenceData. The default is 0. Acceptable values are 0 to 1 , inclusive.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "maxAttendees",
            "description": "integer The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "supportsAttachments",
            "description": "boolean Whether API client performing operation supports event attachments. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    },
    "/users/me/settings/setting": {
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "setting",
            "description": "string The id of the user setting.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/events/quickAdd": {
      "POST": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "text",
            "description": "string The text describing the event to be created.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sendNotifications",
            "description": "boolean Whether to send notifications about the creation of the event. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    },
    "/calendars/calendarId/events/watch": {
      "POST": {
        "request": "{ \"id\": string , \"token\": string , \"type\": string , \"address\": string , \"params\": { \"ttl\": string } }",
        "parameters": [
          {
            "in": "body",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/me/calendarList": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "colorRgbFormat",
            "description": "boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "maxResults",
            "description": "integer Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "minAccessRole",
            "description": "string The minimum access role for the user in the returned entries. Optional. The default is no restriction.\n\nAcceptable values are: \" freeBusyReader \": The user can read free/busy information.\n\" owner \": The user can read and modify events and access control lists.\n\" reader \": The user can read events that are not private.\n\" writer \": The user can read and modify events.\n",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string Token specifying which result page to return. Optional.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "showDeleted",
            "description": "boolean Whether to include deleted calendar list entries in the result. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "showHidden",
            "description": "boolean Whether to show hidden entries. Optional. The default is False.",
            "type": "boolean",
            "required": true
          },
          {
            "in": "query",
            "name": "syncToken",
            "description": "string Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken .\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken .\nLearn more about incremental synchronization.\nOptional. The default is to return all entries.",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/users/me/settings/watch": {
      "POST": {
        "request": "{ \"id\": string , \"token\": string , \"type\": string , \"address\": string , \"params\": { \"ttl\": string } }"
      }
    },
    "/users/me/calendarList/calendarId": {
      "DELETE": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          }
        ]
      },
      "PATCH": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "colorRgbFormat",
            "description": "boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "path",
            "name": "calendarId",
            "description": "string Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \" primary \" keyword.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "colorRgbFormat",
            "description": "boolean Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.",
            "type": "boolean",
            "required": true
          }
        ]
      }
    }
  },
  "produces": "application/json",
  "host": "www.googleapis.com",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": "This is the information of the API"
}