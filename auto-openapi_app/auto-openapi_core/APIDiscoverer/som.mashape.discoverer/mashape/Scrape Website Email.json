{"swagger":"2.0","info":{"title":"Scrape Website Email","description":"Scrape emails from a website programmatically. We are an api that scrapes emails from websites.\r\n\r\nWhat it does:\r\n\r\nScrapes a website for you - We go through the website and scrapes the main page and any sub pages for e-mails and returns those to you in json.\r\n\r\nParses common e-mail patterns - We parse e-mails such as tom[at]site.com or tom (at) site (dot) com. Let us handle it!\r\n\r\nEasy API - Just provide a website address as input and you're all set!\r\n\r\nExcellent Support - Let us know if you have issues. We'll be on call. We also have 24/7 monitor on our API\r\n\r\nAbout the endpoint:\r\nPlease note that subsequent calls to the same url will be fetched from the cache (flushed weekly). \r\n\r\nPlease do note we cannot parse sites that require a login (for now), so for some Facebook pages it is not possible at the moment to fetch the e-mail.\r\n\r\nFinally, please note that a scrape will be terminated after 5 minutes if data cannot be fetched at that time.\r\n\r\nMore Detailed Information:\r\n\r\nReturns a list of emails scraped by priority (ie. e-mails appear on top level pages are first). Please note that subsequent calls to the same url will be fetched from the cache (14 day flush). \r\n\r\nWill also parse patterns such as hello[at]site.com, hello[at]site[dot]com, hello(at)site.com, hello(at)site(dot)com, hello @ site.com, hello @ site . com. \r\n\r\nPlease do note we cannot parse sites that require a login (for now), so for some Facebook pages it is not possible at the moment to fetch the e-mail.\r\n\r\nFinally, please note that the api will fetch links for up to 2 minutes. After that time it will start analysing the pages which have been scraped. Therefore please ensure that your client has a timeout of at least 150 seconds (2 mins to fetch and the rest to parse). \r\n\r\nPlease note that due to the fact that the api goes out to fetch the pages, the server allows only 1 concurrent request/ip. Requests which are made while the 1 request is still processing will result in a 429 code.","contact":{"name":"tommytcchan","url":"http://scrapewebsite.email"},"version":null,"x-logo":"https://s3.amazonaws.com/mashape-production-logos/apis/53aa6137e4b0f2c975471867_medium","x-mashape-categories":["Tools"],"x-origin":{"format":"mashape","url":"https://market.mashape.com/tommytcchan/scrape-website-email"}},"host":"scrape-website-email.p.mashape.com","basePath":"","paths":{"/scrape_emails.json":{"get":{"description":"Returns a list of emails scraped by priority (ie. e-mails appear on top level pages are first). Please note that subsequent calls to the same url will be fetched from the cache (14 day flush).   Will also parse patterns such as hello[at]site.com, hello[at]site[dot]com, hello(at)site.com, hello(at)site(dot)com, hello @ site.com, hello @ site . com.   Please do note we cannot parse sites that require a login (for now), so for some Facebook pages it is not possible at the moment to fetch the e-mail.  Finally, please note that the api will fetch links for up to 2 minutes. After that time it will start analysing the pages which have been scraped. Therefore please ensure that your client has a timeout of at least greater than 150 seconds (2 mins to fetch and the rest to parse).   Please note that due to the fact that the api goes out to fetch the pages, the server allows only 1 concurrent request/ip. Requests which are made while the 1 request is still processing will result in a 429 code.","operationId":"scrape-emails","produces":["application/json"],"parameters":[{"name":"must_include","in":"query","description":"A value that must be included in the page in order for the scrape to happen. This is good in situations where you want certain context before scraping (ie. contact page)."},{"name":"website","in":"query","description":"The website to scrape. It will return an object that contains the data field which has all the emails it found on the site and the children.","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}}},"definitions":{"Resource":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"string"}}}}}}