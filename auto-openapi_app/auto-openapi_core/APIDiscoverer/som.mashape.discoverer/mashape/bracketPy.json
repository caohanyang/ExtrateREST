{"swagger":"2.0","info":{"title":"bracketPy","description":"bracketPy can help you build innovative applications which can leverage the power of natural language processing and machine learning. It enables you to retrieve information from web and build predictive models, topic models and recommendation engines.","contact":{"name":"bracketPy","url":"http://www.bracketpy.com"},"version":null,"x-logo":"https://s3.amazonaws.com/mashape-production-logos/apis/552a4af7e4b0b0dce894a486_medium","x-mashape-categories":["Business","Data"],"x-origin":{"format":"mashape","url":"https://market.mashape.com/bracketpy/bracketpy"}},"host":"bracketpy.p.mashape.com","basePath":"","paths":{"/getTopics":{"post":{"description":"This API categorizes given url/text into predefined set of categories based on it's content. We have 10 broad level categories--'home', 'arts', 'games', 'health', 'society', 'computers', 'business', 'recreation', 'sports', ‘science’.  Each of these 10 categories have sub-categorization, if you call the API with these categories.","operationId":"categorization","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/classify":{"post":{"description":"It's a machine learning model which trains on the data provided by the user. Our model learns from the provided categories and predicts the category of the un-categorized text. Our classification is based on semantics and conceptual information extracted from the text/ url.","operationId":"classification-model","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/cleanChat":{"post":{"description":"This API is quite useful in cleaning up dirty text. It is primarily meant for tweets but it can work on other texts as well. It tries it best to correct spellings and unicode errors. Alongside it expands short forms and provides the title of the url posted with tweet.","operationId":"clean-chat","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/conceptExtraction":{"post":{"description":"This API extract the concepts in the content and link them to their corresponding Dbpedia or wikipedia link.","operationId":"concept-extraction","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/docSimilarity":{"post":{"description":"This API provides a similarity score between two documents. These two documents can be either text or urls. The score is calculated based on conceptual information provided in the documents. It is not a syntactical matching. The score is fuzzy match score.","operationId":"document-matching","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/fetchUrls":{"post":{"description":"This API returns all the urls from a webpage. It is quite useful in information retrieval and finding similar content on web while designing crawlers and page rank analysis.","operationId":"fetch-urls","consumes":["application/json"],"responses":{"200":{"description":null,"schema":{"type":"array"}}}}},"/hashTags":{"post":{"description":"This API generates few Hashtags which can post with the content while posting at social media, It also provide few topics which are helpful in creating your own hashtags. So user does not have to go through the content, It suggest which keywords are important and can be helpful in creating hashtags.","operationId":"hashtag-suggestion","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/imgclass":{"post":{"description":"This API will try to identify the image given to it. It is a trained model which can identify the object in an image with state of the art accuracy, together with prediction it also provide the wordnet 3.0 Ids of the objects.","operationId":"image-recognition","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/getLanguage":{"post":{"description":"This API identifies language of the content. Currently we are able to identify 33 languages.  A score representing the closeness with the language is also provided.","operationId":"language","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/microformats":{"post":{"description":"This API return the  standard microformat provided by the url, User has to provide tags he wants to extract.","operationId":"microformat","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/getMood":{"post":{"description":"This API provides the mood  of the writer/author .","operationId":"mood","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/nerTag":{"post":{"description":"This API extract all the named entities in the data. It can identify ‘PERSON’, ‘LOCATION’,  and ‘ ORGANIZATION' with a confidence score.","operationId":"named-entities","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/sentenceSimilarity":{"post":{"description":"This API takes a target sentence and match it with a list of other sentences. It also works on semantical/ conceptual matching.","operationId":"sentence-matching","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/getSentiment":{"post":{"description":"This API returns the sentiment score of the data provided. Data can be either text or just url.","operationId":"sentiment","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/similarPhrases":{"post":{"description":"This API takes a query string and return all the similar phrases related to that query. The similar phrases are phrases which have occurred with the query on web in past","operationId":"similar-phrases","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/summary":{"post":{"description":"This API creates a summary from the provided content, a content can be a url or text and even a pdf link as well.  It successfully avoids the links, supporting text and ads. It also take as input the count of sentences user wants in a summary.","operationId":"summary","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/getTone":{"post":{"description":"This API will identify tone of the text.  Tone of a text content can be Corporate or  Personal  which depend on the words and writing style of the author.","operationId":"tone","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/similarityIndex":{"post":{"description":"This API gives similarity between two phrases. This similarity indicates that these two words have been coming together and share same context.","operationId":"word-similarity-index","consumes":["application/json"]}},"/getYouTubeContext":{"post":{"description":"This API provides the information about the  You Tube video. It fetches the context of the video from description and comments and then provide information about the topics associated with the url.  Without going into video analysis detail user can easily get the information about the context of the video.","operationId":"youtube-context","consumes":["application/json"],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}}},"definitions":{"Resource":{"type":"object","properties":{"msg":{"type":"string"},"topic":{"type":"string"},"faultyData":{"type":"array","items":{"type":"string"}},"code":{"type":"string"},"scores":{"$ref":"#/definitions/Score"}}},"Score":{"type":"object","properties":{"FAQs,_Help,_and_Tutorials":{"type":"integer"},"Robotics":{"type":"integer"},"Organizations":{"type":"integer"},"Human-Computer_Interaction":{"type":"integer"},"Multimedia":{"type":"integer"},"Virtual_Reality":{"type":"integer"},"Data_Formats":{"type":"integer"},"Data_Communications":{"type":"integer"},"Usenet":{"type":"integer"},"Systems":{"type":"integer"},"Internet":{"type":"integer"},"CAD_and_CAM":{"type":"integer"},"Security":{"type":"integer"},"News_and_Media":{"type":"integer"},"Bulletin_Board_Systems":{"type":"integer"},"Emulators":{"type":"integer"},"Graphics":{"type":"integer"},"Ethics":{"type":"integer"},"Software":{"type":"integer"},"Computer_Science":{"type":"integer"},"Mobile_Computing":{"type":"integer"},"Desktop_Publishing":{"type":"integer"},"Programming":{"type":"integer"},"Home_Automation":{"type":"integer"},"Algorithms":{"type":"integer"},"Hacking":{"type":"integer"},"History":{"type":"integer"},"Open_Source":{"type":"integer"},"Artificial_Life":{"type":"integer"},"Performance_and_Capacity":{"type":"integer"},"Hardware":{"type":"integer"},"Consultants":{"type":"integer"},"Supercomputing":{"type":"integer"},"Speech_Technology":{"type":"integer"},"Education":{"type":"integer"},"Parallel_Computing":{"type":"integer"},"Artificial_Intelligence":{"type":"integer"},"E-Books":{"type":"integer"}}}}}