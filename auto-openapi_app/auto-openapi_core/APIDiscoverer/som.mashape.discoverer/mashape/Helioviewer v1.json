{"swagger":"2.0","info":{"title":"Helioviewer v1","description":"Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.","contact":{"name":"helioviewerproject","url":"http://helioviewer.org/"},"version":null,"x-logo":"https://s3.amazonaws.com/mashape-production-logos/apis/53aa5ae8e4b059614034144f_medium","x-mashape-categories":["Education"],"x-origin":{"format":"mashape","url":"https://market.mashape.com/helioviewer-project/helioviewer-v1"}},"host":"helioviewer-v1.p.mashape.com","basePath":"","paths":{"/api/v1/checkYouTubeAuth/":{"get":{"description":"Check to see if Helioveiwer.org is authorized to interact with a user's YouTube account via the current browser session.","operationId":"checkyoutubeauth","parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."}]}},"/api/v1/downloadMovie/":{"get":{"description":"Download a custom movie in one of three file formats.","operationId":"downloadmovie","parameters":[{"name":"format","in":"query","description":"Movie Format (`mp4`, `webm`, or `flv`).","required":true},{"name":"hq","in":"query","description":"Optionally download a higher-quality movie file (valid for .mp4 movies only, ignored otherwise)."},{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/downloadScreenshot/":{"get":{"description":"Download a custom screenshot (that was generated using the `takeScreenshot` API endpoint).","operationId":"downloadscreenshot","parameters":[{"name":"id","in":"query","description":"Unique screenshot identifier (provided by the response to a `takeScreenshot` request).","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/getClosestImage/":{"get":{"description":"Find the image data that is closest to the requested date/time.  Return the associated metadata from the helioviewer database and the XML header of the JPEG2000 image file.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.","operationId":"getclosestimage","produces":["application/json"],"parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"date","in":"query","description":"Desired date/time of the image. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"detector","in":"query","description":"Detector name."},{"name":"instrument","in":"query","description":"Instrument name."},{"name":"measurement","in":"query","description":"Measurement name."},{"name":"observatory","in":"query","description":"Observatory name."},{"name":"sourceId","in":"query","description":"Unique image datasource identifier.  Can be specified in lieu of the `observatory`, `instrument`, `detector`, and `measurement` parameters."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/getDataSources/":{"get":{"description":"Return a hierarchial list of the available datasources.\n\n        Optional parameter `verbose` is exists for compatability with JHelioviewer.  It outputs the hierarchical list in an alternative format and limits the list of available datasources to a known set (SDO and SOHO).  JHelioviewer may not operate properly if new datasources appear in the feed without a client-side updgrade.  To explicitly include new sources, use the optional `enable` parameter.","operationId":"getdatasources","produces":["application/json"],"parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"enable","in":"query","description":"Comma-separated list of observatories to enable."},{"name":"verbose","in":"query","description":""}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/getJP2Header/":{"get":{"description":"Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata.","operationId":"getjp2header","parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"id","in":"query","description":"Unique JP2 image identifier.","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/getJP2Image/":{"get":{"description":"Download a JP2 image for the specified datasource that is the closest match in time to the `date` requested.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.","operationId":"getjp2image","produces":["application/json"],"parameters":[{"name":"date","in":"query","description":"Desired date/time of the JP2 image. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"detector","in":"query","description":"Detector name."},{"name":"instrument","in":"query","description":"Instrument name."},{"name":"jpip","in":"query","description":"Optionally return a JPIP URI instead of the binary data of the image itself."},{"name":"json","in":"query","description":"Optionally return a JSON object."},{"name":"measurement","in":"query","description":"Measurement name."},{"name":"observatory","in":"query","description":"Observatory name."},{"name":"sourceId","in":"query","description":"Unique image datasource identifier."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/getJPX/":{"get":{"description":"Generate and (optionally) download a custom JPX movie of the specified datasource.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.","operationId":"getjpx","produces":["application/json"],"parameters":[{"name":"cadence","in":"query","description":"The desired amount of time (in seconds) between each frame in the movie.\n\n                If no cadence is specified, the server will attempt to select an optimal cadence."},{"name":"detector","in":"query","description":"Detector name."},{"name":"endTime","in":"query","description":"Date/Time for the end of the JPX movie data.  ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"instrument","in":"query","description":"Instrument name."},{"name":"jpip","in":"query","description":"Optionally return a JPIP URI string instead of the binary data of the movie itself, or instead of an HTTP URI in the JSON response (if `verbose` is set to `true`)."},{"name":"linked","in":"query","description":"Generate a `linked` JPX file containing image pointers instead of data for each individual frame in the series. Currently, only JPX image series support this feature."},{"name":"measurement","in":"query","description":"Measurement name."},{"name":"observatory","in":"query","description":"Observatory name."},{"name":"sourceId","in":"query","description":"Unique image datasource identifier.  Can be specified in lieu of the `observatory`, `instrument`, `detector`, and `measurement` parameters."},{"name":"startTime","in":"query","description":"Date/Time for the beginning of the JPX movie data. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"verbose","in":"query","description":"If set to `true,` the JSON response will include timestamps for each frame in the resulting movie and any warning messages associated with the request, in addition to the JPX movie file URI."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/getMovieStatus/":{"get":{"description":"","operationId":"getmoviestatus","produces":["application/json"],"parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"format","in":"query","description":"Movie format (`mp4`, `webm`, or `flv`).","required":true},{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true},{"name":"token","in":"query","description":""},{"name":"verbose","in":"query","description":"Optionally include extra metadata in the response."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/getNewsFeed/":{"get":{"description":"Get the XML RSS feed of the official Helioviewer Project Blog.","operationId":"getnewsfeed","parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/getTile/":{"get":{"description":"Request a single image tile to be used in the Helioviewer.org Viewport.  Tiles are 512x512 pixel PNG images, generated for a given image scale from the intermediary JPEG2000 image files.\n\n        Use the `getClosestImage` API endpoint to obtain the desired image identifier for the `id` parameter.","operationId":"gettile","parameters":[{"name":"id","in":"query","description":"Unique image identifier.","required":true},{"name":"imageScale","in":"query","description":"Image scale in arcseconds per pixel.","required":true},{"name":"x","in":"query","description":"Tile position.","required":true},{"name":"y","in":"query","description":"Tile position.","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/getUserVideos/":{"get":{"description":"Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached).","operationId":"getuservideos","parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"force","in":"query","description":"Optionally bypass cache to retrieve most up-to-date data."},{"name":"num","in":"query","description":"Number of shared user-generated movies to include in the response.  Default is 10."},{"name":"since","in":"query","description":"Optionally truncate result set if this date/time is reached.  ISO 8601 combined UTC date and time UTC format."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/getYouTubeAuth/":{"get":{"description":"Request authorization from the user via a Google / YouTube authorization flow to permit Helioviewer to upload videos on behalf of the user.","operationId":"getyoutubeauth","parameters":[{"name":"description","in":"query","description":"Move description.","required":true},{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true},{"name":"share","in":"query","description":"Optionally share the movie with the Helioviewer community."},{"name":"tags","in":"query","description":"Movie keyword tags (comma separated).","required":true},{"name":"title","in":"query","description":"Movie title.","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/playMovie/":{"get":{"description":"Output an HTML web page with the requested movie embedded within.","operationId":"playmovie","parameters":[{"name":"format","in":"query","description":"Movie format (mp4, webm, or flv).","required":true},{"name":"height","in":"query","description":"Height of embedded movie player in pixels. Defaults to the actual height of the movie itself.","required":true},{"name":"hq","in":"query","description":"Optionally download a higher-quality movie file (valid for .mp4 movies only, ignored otherwise)."},{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true},{"name":"width","in":"query","description":"Width of embedded movie player in pixels.  Defaults to the actual width of the movie itself."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/queueMovie/":{"get":{"description":"Create a custom movie by submitting a request to the movie generation queue.  The response returned will provide you with a unique Movie ID that can be used to check on the status of your movie (via `getMovieStatus`) and to download your movie (via `downloadMovie`).","operationId":"queuemovie","produces":["application/json"],"parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"endTime","in":"query","description":"Desired date and time of the final frame of the movie. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"events","in":"query","description":"List feature/event types and FRMs to use to annoate the movie.  Use the empty string to indicate that no feature/event annotations should be shown.","required":true},{"name":"eventsLabels","in":"query","description":"Optionally annotate each event marker with a text label.","required":true},{"name":"format","in":"query","description":"Movie format (`mp4`, `webm`, `flv`). Default value is `mp4`."},{"name":"frameRate","in":"query","description":"Movie frames per second.  15 frames per second by default."},{"name":"height","in":"query","description":"Height of the field of view in pixels. (Used in conjunction width `x0`,`y0`, and `width`)."},{"name":"imageScale","in":"query","description":"Image scale in arcseconds per pixel.","required":true},{"name":"layers","in":"query","description":"Image datasource layer(s) to include in the movie.","required":true},{"name":"maxFrames","in":"query","description":"Maximum number of frames in the movie.  May be capped by the server."},{"name":"movieLength","in":"query","description":"Movie length in seconds."},{"name":"scale","in":"query","description":"Optionally overlay an image scale indicator."},{"name":"scaleType","in":"query","description":"Image scale indicator."},{"name":"scaleX","in":"query","description":"Horizontal offset of the image scale indicator in arcseconds with respect to the center of the Sun."},{"name":"scaleY","in":"query","description":"Vertical offset of the image scale indicator in arcseconds with respect to the center of the Sun."},{"name":"startTime","in":"query","description":"Desired date and time of the first frame of the movie. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"watermark","in":"query","description":"Optionally overlay a Helioviewer.org watermark image.  Enabled by default."},{"name":"width","in":"query","description":"Width of the field of view in pixels. (Used in conjunction width `x0`,`y0`, and `height`)."},{"name":"x0","in":"query","description":"The horizontal offset of the center of the field of view from the center of the Sun.  Used in conjunction with `y0`, `width`, and `height`."},{"name":"x1","in":"query","description":"The horizontal offset of the top-left corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `y1`, `x2`, and `y2`."},{"name":"x2","in":"query","description":"The horizontal offset of the bottom-right corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `y1`, and `y2`."},{"name":"y0","in":"query","description":"The vertical offset of the center of the field of view from the center of the Sun.  Used in conjunction with `x0`, `width`, and `height`."},{"name":"y1","in":"query","description":"The vertical offset of the top-left corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `x2`, and `y2`."},{"name":"y2","in":"query","description":"The vertical offset of the bottom-right corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `y1`, and `x2`."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/reQueueMovie/":{"get":{"description":"Re-generate a custom movie that is no longer cached on disk.  Once the movie has been successfully queued for regeneration, the Movie ID can be used to check on the status of the movie (via `getMovieStatus`) and to download the movie (via `downloadMovie`).","operationId":"requeuemovie","produces":["application/json"],"parameters":[{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/shortenURL/":{"get":{"description":"Shorten a Helioviewer.org URL with the bit.ly URL shortening web service.","operationId":"shortenurl","produces":["application/json"],"parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"queryString","in":"query","description":"URL-encoded query string.","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/api/v1/takeScreenshot/":{"get":{"description":"Generate a custom screenshot.\n\n        You must specify values for either `x1`, `y1`, `x2`, and `y2`\n        or `x0`, `y0`, `width` and `height`.\n\n        By default, the response is a JSON object containing a unique screenshot identifier (`id`) that can be used to with the `downloadScreenshot` API endpoint.\n\n        Set the `display` parameter to `true` to directly return the screenshot as binary PNG image data in the response.\n\n        Please note that each request causes the server to generate a screenshot from scratch and is resource intensive.  For performance reasons, you should cache the response if you simply intend to serve exactly the same screenshot to multiple users.","operationId":"takescreenshot","parameters":[{"name":"callback","in":"query","description":"Wrap the response object in a function call of your choosing."},{"name":"date","in":"query","description":"Desired date/time of the image. ISO 8601 combined UTC date and time UTC format.","required":true},{"name":"display","in":"query","description":"Set to `true` to directly output binary PNG image data.  Default is `false` (which outputs a JSON object)."},{"name":"eventLabels","in":"query","description":"Optionally annotate each event marker with a text label.","required":true},{"name":"events","in":"query","description":"List feature/event types and FRMs to use to annoate the movie.  Use the empty string to indicate that no feature/event annotations should be shown."},{"name":"height","in":"query","description":"Height of the field of view in pixels. (Used in conjunction width `x0`,`y0`, and `width`)."},{"name":"imageScale","in":"query","description":"Image scale in arcseconds per pixel.","required":true},{"name":"layers","in":"query","description":"Image datasource layer(s) to include in the screenshot.","required":true},{"name":"scale","in":"query","description":"Optionally overlay an image scale indicator."},{"name":"scaleType","in":"query","description":"Image scale indicator."},{"name":"scaleX","in":"query","description":"Horizontal offset of the image scale indicator in arcseconds with respect to the center of the Sun."},{"name":"scaleY","in":"query","description":"Vertical offset of the image scale indicator in arcseconds with respect to the center of the Sun."},{"name":"watermark","in":"query","description":"Optionally overlay a watermark consisting of a Helioviewer logo and the datasource abbreviation(s) and timestamp(s) displayed in the screenshot."},{"name":"width","in":"query","description":"Width of the field of view in pixels. (Used in conjunction width `x0`,`y0`, and `height`)."},{"name":"x0","in":"query","description":"The horizontal offset of the center of the field of view from the center of the Sun.  Used in conjunction with `y0`, `width`, and `height`."},{"name":"x1","in":"query","description":"The horizontal offset of the top-left corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `y1`, `x2`, and `y2`."},{"name":"x2","in":"query","description":"The horizontal offset of the bottom-right corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `y1`, and `y2`."},{"name":"y0","in":"query","description":"The vertical offset of the center of the field of view from the center of the Sun.  Used in conjunction with `x0`, `width`, and `height`."},{"name":"y1","in":"query","description":"The vertical offset of the top-left corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `x2`, and `y2`."},{"name":"y2","in":"query","description":"The vertical offset of the bottom-right corner of the field of view with respect to the center of the Sun (in arcseconds). Used in conjunction with `x1`, `y1`, and `x2`."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/api/v1/uploadMovieToYouTube/":{"get":{"description":"Share an existing user-generated movie to YouTube.","operationId":"uploadmovietoyoutube","produces":["application/json"],"parameters":[{"name":"description","in":"query","description":"Move description."},{"name":"html","in":"query","description":"Optionally output response as HTML instead of JSON."},{"name":"id","in":"query","description":"Unique movie identifier (provided by the response to a `queueMovie` request).","required":true},{"name":"share","in":"query","description":"Optionally share the movie with the Helioviewer community."},{"name":"tags","in":"query","description":"Movie keyword tags (comma separated)."},{"name":"title","in":"query","description":"Movie title."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}}},"definitions":{"Resource_0":{"type":"object"},"Resource":{"type":"object","properties":{"date":{"type":"string"},"height":{"type":"integer"},"id":{"type":"integer"},"layeringOrder":{"type":"integer"},"refPixelX":{"type":"integer"},"refPixelY":{"type":"integer"},"scale":{"type":"integer"},"sunCenterOffsetParams":{"type":"string"},"width":{"type":"integer"}}}}}