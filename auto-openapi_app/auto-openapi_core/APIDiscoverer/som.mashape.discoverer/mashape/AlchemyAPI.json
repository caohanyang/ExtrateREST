{"swagger":"2.0","info":{"title":"AlchemyAPI","description":"AlchemyAPI provides advanced cloud-based and on-premise text analysis infrastructure that eliminates the expense and difficulty of integrating natural language processing systems into your application, service, or data processing pipeline.","contact":{"name":"alchemyapi","url":"http://www.alchemyapi.com/developers/"},"version":null,"x-logo":"https://s3.amazonaws.com/mashape-production-logos/apis/53aa4a7be4b0a798dbd1a101_medium","x-mashape-categories":["Tools"],"x-origin":{"format":"mashape","url":"https://market.mashape.com/alchemyapi/alchemyapi-1"}},"host":"alchemy.p.mashape.com","basePath":"","paths":{"/html/HTMLGetAuthor":{"get":{"description":"The HTMLGetAuthor call is utilized to extract author information contained within the specified web page. AlchemyAPI will process the posted HTML document, looking for author information.","operationId":"htmlgetauthor","produces":["application/json"],"parameters":[{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback. (optional parameter, requires \"outputMode\" to be set to json)"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded) (optional parameter, for response tracking purposes.)"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetCategory":{"get":{"description":"The HTMLGetCategory call is utilized to categorize a posted HTML document. AlchemyAPI will extract text and other important content from the posted HTML document structure and perform document categorization operations.","operationId":"htmlgetcategory","parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query","description":"desired API output format.  Possible values: xml (default), json, rdf, rel-tag, rel-tag-raw","required":true},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}]}},"/html/HTMLGetConstraintQuery":{"get":{"description":"The HTMLGetConstraintQuery call is utilized to extract structured data from a posted HTML document. AlchemyAPI will analyze the posted HTML document structure, extracting the desired structured data.","operationId":"htmlgetconstraintquery","parameters":[{"name":"cquery","in":"query","description":"the constraint query to execute","required":true},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback","required":true},{"name":"outputMode","in":"query","description":"desired API output format.  Possible values: xml (default), json, rdf","required":true},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetFeedLinks":{"get":{"description":"The HTMLGetFeedLinks call is utilized to extract any links to RSS / ATOM feeds contained within the posted web page. AlchemyAPI will process the posted HTML document, looking for RSS / ATOM feed links.","operationId":"htmlgetfeedlinks","produces":["application/json"],"parameters":[{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)   (optional parameter, for response tracking purposes.)","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetLanguage":{"get":{"description":"The HTMLGetLanguage call is utilized to detect the language utilized within a posted HTML document. AlchemyAPI will extract text from the posted HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform language detection operations.","operationId":"htmlgetlanguage","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL  (optional parameter, for response tracking purposes. must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetMicroformatData":{"get":{"description":"The HTMLGetMicroformatData call is utilized to extract Microformats content from a posted HTML document. AlchemyAPI will process the posted HTML document, looking for a variety of Microformats data structures (hCards, geo, adr, etc.).","operationId":"htmlgetmicroformatdata","produces":["application/json"],"parameters":[{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)   (optional parameter, for response tracking purposes.)"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetRankedConcepts":{"get":{"description":"The HTMLGetRankedConcepts call is utilized to extract a relevancy-ranked list of concept tags for a posted HTML document. AlchemyAPI will extract text from the posted HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform concept tagging operations.","operationId":"htmlgetrankedconcepts","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback  (optional parameter, requires \"outputMode\" to be set to json)"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified concept tags.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of concept tags to extract (default: 8)"},{"name":"outputMode","in":"query","description":"desired API output format  Possible values: xml (default) json rdf"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the concept tags were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetRankedKeywords":{"get":{"description":"The HTMLGetRankedKeywords call is utilized to extract a relevancy-ranked list of topic keywords from a posted HTML document. AlchemyAPI will extract text from the posted HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform keyword extraction operations.","operationId":"htmlgetrankedkeywords","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"keywordExtractMode","in":"query","description":"keyword extraction mode (normal or strict)  Possible values: normal - normal keyword extraction mode (default) strict - strict keyword extraction mode (returns more \"well-formed\" keywords). refines results at the expense of returning fewer keywords."},{"name":"maxRetrieve","in":"query","description":"maximum number of keywords to extract (default: 50)"},{"name":"outputMode","in":"query"},{"name":"sentiment","in":"query","description":"whether to enable keyword-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the keywords were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetRankedNamedEntities":{"get":{"description":"The HTMLGetRankedNamedEntities call is utilized to extract a grouped, relevancy-ranked list of named entities (people, companies, organizations, etc.) from a posted HTML document. AlchemyAPI will extract text from the posted HTML document (ignoring navigation links, advertisements, and other undesireable content), and perform entity extraction operations.","operationId":"htmlgetrankednamedentities","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url"},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences into detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"disambiguate","in":"query","description":"hether to disambiguate detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with disambiguated entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of named entities to extract (default: 50)"},{"name":"outputMode","in":"query"},{"name":"quotations","in":"query","description":"whether to enable quotations extraction.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable entity-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the entities were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetRawText":{"get":{"description":"The HTMLGetRawText call is utilized to extract all text from a posted web page. AlchemyAPI will extract text from the posted HTML document structure, including page navigation, advertisements, and other page content. To ignore this content, please use the HTMLGetText call.","operationId":"htmlgetrawtext","parameters":[{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"outputMode","in":"query","description":"desired API output format  Possible values: xml (default) json rdf","required":true},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetRelations":{"get":{"description":"The URLGetRelations call is utilized to extract Subject-Action-Object relations from a posted HTML document. AlchemyAPI will extract text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform relation extraction operations.","operationId":"htmlgetrelations","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)","required":true},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences in detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description.","required":true},{"name":"disambiguate","in":"query","description":"whether to disambiguate detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"entities","in":"query","description":"whether to enable relation subject/object entity extraction.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of relations to extract (default: 50, maximum: 100)"},{"name":"outputMode","in":"query"},{"name":"requireEntities","in":"query","description":"whether to only show extracted relations that contain at least one named entity, ignoring relations containing no entities.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable directional sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)   (optional parameter - Note that enabling this option will incur usage of one (1) additional AlchemyAPI transaction)"},{"name":"sentimentExcludeEntities","in":"query","description":"whether to exclude relation subject/object named entity text from sentiment processing. (For example, not analyzing \"New\" in \"New York\")  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the relations were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL   (optional parameter, must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description.","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/html/HTMLGetTargetedSentiment":{"get":{"description":"The HTMLGetTargetedSentiment call is utilized to extract positive/negative sentiment targeted towards a specific user-specified target phrase inside the text of a posted HTML document. AlchemyAPI will extract text from the posted HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform sentiment analysis operations.","operationId":"htmlgettargetedsentiment","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"target","in":"query","description":"target phrase (must be uri-argument encoded) - sentiment targeted towards this phrase will be extracted from the text","required":true},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetText":{"get":{"description":"","operationId":"htmlgettext","parameters":[{"name":"extractLinks","in":"query","description":"whether to include hyperlinks in the extracted web page text  Possible values: 1 - enable 0 - disable (default)","required":true},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback","required":true},{"name":"outputMode","in":"query","description":"desired API output format  Possible values: xml (default) json rdf","required":true},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)   (optional parameter, for response tracking purposes.)"},{"name":"useMetadata","in":"query","description":"whether to use description information embedded in web page meta-data  Possible values: 1 - enable (default) 0 - disable","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetTextSentiment":{"get":{"description":"The HTMLGetTextSentiment call is utilized to extract positive/negative sentiment from a posted HTML document. AlchemyAPI will extract text from the posted HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform sentiment analysis operations.","operationId":"htmlgettextsentiment","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"HTML document URL (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/html/HTMLGetTitle":{"get":{"description":"The HTMLGetTitle call is utilized to extract title information from a posted web page. The posted HTML document is processed, extracting any title information.","operationId":"htmlgettitle","parameters":[{"name":"html","in":"query","description":"HTML document content (must be uri-argument encoded)","required":true},{"name":"outputMode","in":"query","description":"desired API output format  Possible values: xml (default) json rdf","required":true},{"name":"url","in":"query","description":"uri-argument encoded http url   (optional parameter)"},{"name":"useMetadata","in":"query","description":"whether to use title information embedded in web page meta-data  Possible values: 1 - enable (default) 0 - disable"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/text/TextGetCategory":{"get":{"description":"The TextGetCategory call is utilized to categorize posted text document.","operationId":"textgetcategory","parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url"},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL (must be uri-argument encoded)"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/text/TextGetLanguage":{"get":{"description":"The TextGetLanguage call is utilized to detect the language utilized within a posted text document.","operationId":"textgetlanguage","produces":["application/json"],"parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document url"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/text/TextGetRankedConcepts":{"get":{"description":"","operationId":"textgetrankedconcepts","produces":["application/json"],"parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback  (optional parameter, requires \"outputMode\" to be set to json)"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified concept tags.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of concept tags to extract (default: 8)"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the concept tags were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL (must be uri-argument encoded)"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/text/TextGetRankedKeywords":{"get":{"description":"The TextGetRankedKeywords call is utilized to extract a relevancy-ranked list of topic keywords from within a posted text document.","operationId":"textgetrankedkeywords","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)"},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"keywordExtractMode","in":"query","description":"keyword extraction mode (normal or strict)  Possible values: normal - normal keyword extraction mode (default) strict - strict keyword extraction mode (returns more \"well-formed\" keywords). refines results at the expense of returning fewer keywords."},{"name":"maxRetrieve","in":"query","description":"maximum number of keywords to extract (default: 50)"},{"name":"outputMode","in":"query"},{"name":"sentiment","in":"query","description":"whether to enable keyword-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the keywords were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL (must be uri-argument encoded)"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/text/TextGetRankedNamedEntities":{"get":{"description":"The TextGetRankedNamedEntities call is utilized to extract a grouped, ranked list of named entities (people, companies, organizations, etc.) from within a posted text document.","operationId":"textgetrankednamedentities","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url  (optional parameter, used with rel-tag or rel-tag-raw outputMode. must be uri-argument encoded)","required":true},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences into detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"disambiguate","in":"query","description":"whether to disambiguate detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"jsonp","in":"query","description":"Desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with disambiguated entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of named entities to extract (default: 50)","required":true},{"name":"outputMode","in":"query"},{"name":"quotations","in":"query","description":"whether to enable quotations extraction.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable entity-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the entities were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL"}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/text/TextGetRelations":{"get":{"description":"The TextGetRelations call is utilized to extract Subject-Action-Object relations from a given text document.","operationId":"textgetrelations","parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)"},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences in detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"disambiguate","in":"query","description":"whether to disambiguate detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"entities","in":"query","description":"whether to enable relation subject/object entity extraction.  Possible values: 1 - enabled 0 - disabled (default)   (optional parameter - Note that enabling this option will incur usage of one (1) additional AlchemyAPI transaction)"},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of relations to extract (default: 50, maximum: 100)"},{"name":"outputMode","in":"query"},{"name":"requireEntities","in":"query","description":"whether to only show extracted relations that contain at least one named entity, ignoring relations containing no entities.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable directional sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)   (optional parameter - Note that enabling this option will incur usage of one (1) additional AlchemyAPI transaction)"},{"name":"sentimentExcludeEntities","in":"query","description":"whether to exclude relation subject/object named entity text from sentiment processing. (For example, not analyzing \"New\" in \"New York\")  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the relations were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document url (must be uri-argument encoded)"},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/text/TextGetTargetedSentiment":{"get":{"description":"The TextGetTargetedSentiment call is utilized to extract positive/negative sentiment targeted towards a user-specified phrase within a posted text document.","operationId":"textgettargetedsentiment","parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"target","in":"query","description":"target phrase (must be uri-argument encoded) - sentiment targeted towards this phrase will be extracted from the text","required":true},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL (must be uri-argument encoded)"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/text/TextGetTextSentiment":{"get":{"description":"The TextGetTextSentiment call is utilized to extract positive/negative sentiment from within a posted text document.","operationId":"textgettextsentiment","parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)","required":true},{"name":"text","in":"query","description":"Text document content (must be uri-argument encoded)","required":true},{"name":"url","in":"query","description":"Text document URL (must be uri-argument encoded)"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetAuthor":{"get":{"description":"The URLGetAuthor call is utilized to extract author information contained within the specified web page. AlchemyAPI will download the requested URL, process the retrieved HTML document, looking for author information.","operationId":"urlgetauthor","produces":["application/json"],"parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback  (optional parameter, requires \"outputMode\" to be set to json"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetCategory":{"get":{"description":"The URLGetCategory call is utilized to categorize a webpage. AlchemyAPI will download the requested URL, extracting text and other important content from the HTML document structure, and perform document categorization operations.","operationId":"urlgetcategory","parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url","required":true},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description.","required":true},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads/nav links), visual constraint queries, and XPath queries.","required":true},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description.","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetConstraintQuery":{"get":{"description":"The URLGetConstraintQuery call is utilized to extract structured data from a given web page. AlchemyAPI will download the requested URL, analyze the HTML document structure, and perform structured data extraction operations.","operationId":"urlgetconstraintquery","parameters":[{"name":"cquery","in":"query","description":"document constraint query","required":true},{"name":"jsonp","in":"query","description":"Desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetFeedLinks":{"get":{"description":"The URLGetFeedLinks call is utilized to extract any links to RSS / ATOM feeds contained within the specified web page. AlchemyAPI will download the requested URL, process the retrieved HTML document, looking for RSS / ATOM feed links.","operationId":"urlgetfeedlinks","produces":["application/json"],"parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetLanguage":{"get":{"description":"The URLGetLanguage call is utilized to detect the language utilized within a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform language detection operations.","operationId":"urlgetlanguage","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetMicroformatData":{"get":{"description":"The URLGetMicroformatData call is utilized to extract structured microformats data from a given web page. AlchemyAPI will retrieve the requested URL, process the retrieved HTML document, and look for a variety of Microformats data structures (hCards, geo, adr, etc.).","operationId":"urlgetmicroformatdata","produces":["application/json"],"parameters":[{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetRankedConcepts":{"get":{"description":"The URLGetRankedConcepts call is utilized to extract a relevancy-ranked list of concept tags for a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform concept tagging operations.","operationId":"urlgetrankedconcepts","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)","required":true},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"jsonp","in":"query","description":"desired JSONP callback  (optional parameter, requires \"outputMode\" to be set to json"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified concept tags.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of concept tags to extract (default: 8)"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the concept tags were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetRankedKeywords":{"get":{"description":"The URLGetRankedKeywords call is utilized to extract a relevancy-ranked list of topic keywords from a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform keyword extraction operations.","operationId":"urlgetrankedkeywords","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"keywordExtractMode","in":"query","description":"keyword extraction mode (normal or strict)  Possible values: normal - normal keyword extraction mode (default) strict - strict keyword extraction mode (returns more \"well-formed\" keywords). refines results at the expense of returning fewer keywords."},{"name":"maxRetrieve","in":"query","description":"maximum number of keywords to extract (default: 50)"},{"name":"outputMode","in":"query"},{"name":"sentiment","in":"query","description":"whether to enable keyword-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the keywords were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetRankedNamedEntities":{"get":{"description":"The URLGetRankedNamedEntities call is utilized to extract a grouped, relevancy-ranked list of named entities (people, companies, organizations, etc.) from a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform entity extraction operations.","operationId":"urlgetrankednamedentities","parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url  (optional parameter, used with rel-tag or rel-tag-raw outputMode. must be uri-argument encoded)"},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences into detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product descriptio"},{"name":"disambiguate","in":"query","description":"whether to disambiguate detected entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"jsonp","in":"query","description":"Desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with disambiguated entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of named entities to extract (default: 50)"},{"name":"outputMode","in":"query"},{"name":"quotations","in":"query","description":"whether to enable quotations extraction.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable entity-level sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the entities were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetRawText":{"get":{"description":"The URLGetRawText call is utilized to extract all text from a web page. AlchemyAPI will download the requested URL, extract text from the HTML document structure, including page navigation, advertisements, and other page content. To ignore this content, please use the URLGetText call.","operationId":"urlgetrawtext","parameters":[{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetRelations":{"get":{"description":"The URLGetRelations call is utilized to extract Subject-Action-Object relations from a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform relation extraction operations.","operationId":"urlgetrelations","produces":["application/json"],"parameters":[{"name":"baseUrl","in":"query","description":"rel-tag output base http url (must be uri-argument encoded)"},{"name":"coreference","in":"query","description":"whether to resolve he/she/etc coreferences in detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"disambiguate","in":"query","description":"whether to disambiguate detected relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"entities","in":"query","description":"whether to enable relation subject/object entity extraction.  Possible values: 1 - enabled 0 - disabled (default)   (optional parameter - Note that enabling this option will incur usage of one (1) additional AlchemyAPI transaction)"},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"linkedData","in":"query","description":"whether to include Linked Data content links with identified relation subject/object named entities.  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"maxRetrieve","in":"query","description":"maximum number of relations to extract (default: 50, maximum: 100)","required":true},{"name":"outputMode","in":"query"},{"name":"requireEntities","in":"query","description":"whether to only show extracted relations that contain at least one named entity, ignoring relations containing no entities.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sentiment","in":"query","description":"whether to enable directional sentiment analysis.  Possible values: 1 - enabled 0 - disabled (default)   (optional parameter - Note that enabling this option will incur usage of one (1) additional AlchemyAPI transaction)"},{"name":"sentimentExcludeEntities","in":"query","description":"whether to exclude relation subject/object named entity text from sentiment processing. (For example, not analyzing \"New\" in \"New York\")  Possible values: 1 - enabled (default) 0 - disabled"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the relations were extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"200":{"description":null,"schema":"#/definitions/Resource"}}}},"/url/URLGetTargetedSentiment":{"get":{"description":"The URLGetTargetedSentiment call is utilized to extract positive / negative sentiment targeted towards a specific user-specified target phrase inside the text of a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform sentiment extraction operations.","operationId":"urlgettargetedsentiment","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"jsonp","in":"query","description":"desired JSONP callback","required":true},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads / nav links), visual constraint queries, and XPath queries."},{"name":"target","in":"query","description":"target phrase (must be uri-argument encoded) - sentiment targeted towards this phrase will be extracted from the text","required":true},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetText":{"get":{"description":"The URLGetText call is utilized to extract the primary page / article text from a web page. AlchemyAPI will download the requested URL, extract text from the HTML document structure, and ignore page navigation, advertisements, and other undesireable page content.","operationId":"urlgettext","parameters":[{"name":"extractLinks","in":"query","description":"whether to include hyperlinks in the extracted web page text  Possible values: 1 - enable 0 - disable (default)"},{"name":"jsonp","in":"query","description":"desired JSONP callback","required":true},{"name":"outputMode","in":"query"},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"useMetadata","in":"query","description":"whether to use description information embedded in web page meta-data  Possible values: 1 - enable (default) 0 - disable"}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetTextSentiment":{"get":{"description":"The URLGetTextSentiment call is utilized to extract positive/negative sentiment from a given web page. AlchemyAPI will download the requested URL, extracting text from the HTML document structure (ignoring navigation links, advertisements, and other undesireable content), and perform sentiment extraction operations.","operationId":"urlgettextsentiment","parameters":[{"name":"cquery","in":"query","description":"a visual constraints query to apply to the web page.  Constraint queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."},{"name":"jsonp","in":"query","description":"desired JSONP callback"},{"name":"outputMode","in":"query"},{"name":"showSourceText","in":"query","description":"whether to include the original 'source text' the sentiment was extracted from within the API response.  Possible values: 1 - enabled 0 - disabled (default)"},{"name":"sourceText","in":"query","description":"where to obtain the text that will be processed by this API call.  AlchemyAPI supports multiple modes of text extraction: web page cleaning (removes ads, navigation links, etc.), raw text extraction (processes all web page text, including ads/nav links), visual constraint queries, and XPath queries."},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"xpath","in":"query","description":"an XPath query to apply to the web page.  XPath queries enable API operations to be performed on a targeted area of a web page, such as a story title or product description."}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}},"/url/URLGetTitle":{"get":{"description":"","operationId":"urlgettitle","parameters":[{"name":"outputMode","in":"query","description":"desired API output format  Possible values: xml (default) json rdf","required":true},{"name":"url","in":"query","description":"http url (must be uri-argument encoded)","required":true},{"name":"useMetadata","in":"query","description":"whether to use title information embedded in web page meta-data  Possible values: 1 - enable (default) 0 - disable","required":true}],"responses":{"0":{"description":null,"schema":"#/definitions/Resource_0"}}}}},"definitions":{"Resource":{"type":"object","properties":{"status":{"type":"string"},"statusInfo":{"type":"string"},"usage":{"type":"string"},"url":{"type":"string"},"author":{"type":"string"}}},"Resource_0":{"type":"object"}}}